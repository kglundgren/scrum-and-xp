@model scrum_and_xp.Models.CategoryViewModel
@{
    ViewBag.Title = "NewParentCategoryView";
    var auth = Request.IsAuthenticated;
}

<h2>New Parent Category</h2>

@if (TempData["notice"] != null)
{
    <div class="alert alert-info" role="alert">@TempData["notice"]</div>
}

@*@if (auth == true)
    {*@
<h2>New Category</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-md-10">
                @Html.DropDownListFor(model => model.Type, new List<SelectListItem>
           {
               new SelectListItem{ Text="Formal", Value ="formal"},
               new SelectListItem{ Text="Informal", Value ="informal"}
           })
            </div>

            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>






        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*}*@