@model scrum_and_xp.ViewModels.Chat
@{
    ViewBag.Title = "Chat";
}
<h2>Chat</h2>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion">
    </ul>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            $('#displayname').val('@Model.Name');
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        }

                    function registerClientMethods(chatHub) {

                // Calls when user successfully logged in
                chatHub.client.onConnected = function (id, userName, allUsers, messages) {

                    setScreen(true);

                    $('#hdId').val(id);
                    $('#hdUserName').val(userName);
                    $('#spanUser').html(userName);

                    // Add All Users
                    for (i = 0; i < allUsers.length; i++) {

                        AddUser(chatHub, allUsers[i].ConnectionId, allUsers[i].UserName);
                    }

                    // Add Existing Messages
                    for (i = 0; i < messages.length; i++) {

                        AddMessage(messages[i].UserName, messages[i].Message);
                    }


                }

                // On New User Connected
                chatHub.client.onNewUserConnected = function (id, name) {

                    AddUser(chatHub, id, name);
                }


                // On User Disconnected
                chatHub.client.onUserDisconnected = function (id, userName) {

                    $('#' + id).remove();

                    var ctrId = 'private_' + id;
                    $('#' + ctrId).remove();


                    var disc = $('<div class="disconnect">"' + userName + '" logged off.</div>');

                    $(disc).hide();
                    $('#divusers').prepend(disc);
                    $(disc).fadeIn(200).delay(2000).fadeOut(200);

                }

                chatHub.client.messageReceived = function (userName, message) {

                    AddMessage(userName, message);
                }


                chatHub.client.sendPrivateMessage = function (windowId, fromUserName, message) {

                    var ctrId = 'private_' + windowId;


                    if ($('#' + ctrId).length == 0) {

                        createPrivateChatWindow(chatHub, windowId, ctrId, fromUserName);

                    }

                    $('#' + ctrId).find('#divMessage').append('<div class="message"><span class="userName">' + fromUserName + '</span>: ' + message + '</div>');

                    // set scrollbar
                    var height = $('#' + ctrId).find('#divMessage')[0].scrollHeight;
                    $('#' + ctrId).find('#divMessage').scrollTop(height);

                }

            }

        );
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}