@*@model IEnumerable<scrum_and_xp.Models.FormalPost>*@
@model scrum_and_xp.ViewModels.FormalPostViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Formal</h2>

<p>
    @Html.ActionLink("Create New", "Create", routeValues: new { type = "Formal" })
</p>

@Html.DropDownListFor(m => m.SelectedTypeId, Model.FormalTypes, "Please select formal type", new { @class = "form-control", @onchange = "FillCategory()" })
<br />
@Html.DropDownListFor(m => m.SelectedCategoryId, Model.FormalCategories, "Please select formal category", new { @class = "form-control", @onchange = "FilterPosts()" })
<br />
<a onclick="ResetFilter()" class="btn btn-primary btn-sm">Reset filter</a>
<br />
<br />

<div id="d1">
    @foreach (var item in Model.FormalPosts)
    {
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">@item.Title</h3>
        </div>
        <div class="panel-body">
            @item.Content

            @if (item.Img == 1)
            {
                string p = item.Id.ToString();
                string path = Path.Combine("~/Images/" + p + "Formal");
                <img src="@Url.Content(path + ".jpg")" alt="Image" style="height:200px; border-style: groove; margin-left:500px" />
            }
            <br /><br />
            <span class="text-info">Tag: @item.FormalCategories.FirstOrDefault().Name</span>
            <br />
            <span class="text-info">Type: @item.FormalCategories.FirstOrDefault().Type.Name</span>
            <hr />
            @item.AuthorId.FirstName @item.AuthorId.LastName
            <br />
            @item.PostTime
        </div>
        @Html.ActionLink("Edit", "Edit", new { id = item.Id, typeId = "formal" }) |
        @Html.ActionLink("Details", "Details", new { id = item.Id, typeId = "formal" }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.Id, typeId = "formal" })
    </div>
    }
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FormalPosts.FirstOrDefault().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FormalPosts.FirstOrDefault().Content)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FormalPosts.FirstOrDefault().PostTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FormalPosts.FirstOrDefault().AuthorId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FormalPosts.FirstOrDefault().FormalCategories)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FormalTypes)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.FormalPosts)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostTime)
            </td>
            <td>
                @{
                    var author = item.AuthorId.FirstName + " " + item.AuthorId.LastName;
                }
                @author
            </td>
            <td>
                @foreach (var cat in item.FormalCategories)
                {
                    <span>@cat.Name</span>
                }
            </td>
            <td>
                @*@foreach (var type in item.FormalCategories)
                    {
                        <span>@type.Type</span>
                    }*@
                <span>@item.FormalCategories.FirstOrDefault().Type.Name</span>
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.Id })*@
            </td>
        </tr>
    }

</table>


@section Scripts {
    <script>
        function ResetFilter() {
            window.location.href = '@Url.Action("FormalPosts", "Posts")';
        }

        function FillCategory() {
            var typeId = $('#SelectedTypeId').val();
            $.ajax({
                url: '/Posts/FillCategory',
                type: "GET",
                dataType: "JSON",
                data: { Type: typeId },
                success: function (categories) {
                    $("#SelectedCategoryId").html(""); // clear before appending new list
                    $.each(categories, function (i, category) {
                        $("#SelectedCategoryId").append(
                            $('<option></option>').val(category.Value).html(category.Text));
                    });
                    FilterPostsOnType();
                }
            });
        }

        function FilterPostsOnType() {
            var typeId = $('#SelectedTypeId').val();
            $.ajax({
                url: '/Posts/FilterPostsOnType',
                type: "GET",
                dataType: "JSON",
                data: { Type: typeId },
                success: function (data) {
                    $("#d1").html(""); // clear before appending new list
                    $.each(data, function (index, item) {

                        var $panelPrimary = $('<div id=panel-primary' + index + ' class="panel panel-primary"></div>'),
                            $panelHeading = $('<div class="panel-heading"></div>'),
                            $panelTitle = $('<h3 class="panel-title"></h3>'),
                            $panelBody = $('<div class="panel-body"></div>');

                        $('#d1').append($panelPrimary);
                        $('#panel-primary' + index).append([
                            $panelHeading
                                .append($panelTitle)
                                .text(item.Title),
                            $panelBody
                                .text(item.Content)
                                .append('<br /><br />')
                                .append('<span class=text-info>Tag: ' + item.FormalCategories[0].Name + '</span>')
                                .append('<br />')
                                .append('<span class=text-info>Type: ' + item.FormalCategories[0].Type.Name + '</span>')
                                .append('<hr>')
                                .append(item.AuthorId.FirstName + ' ' + item.AuthorId.LastName)
                                .append('<br />')
                                .append(item.PostTime)
                        ]);
                    });
                }
            });
        }

        function FilterPosts() {
            var catId = $('#SelectedCategoryId').val();
            $.ajax({
                url: '/Posts/FilterFormalPosts',
                type: "GET",
                dataType: "JSON",
                data: { Category: catId },
                success: function (data) {
                    $("#d1").html(""); // clear before appending new list
                    $.each(data, function (index, item) {

                        var $panelPrimary = $('<div id=panel-primary' + index + ' class="panel panel-primary"></div>'),
                            $panelHeading = $('<div class="panel-heading"></div>'),
                            $panelTitle = $('<h3 class="panel-title"></h3>'),
                            $panelBody = $('<div class="panel-body"></div>');

                        $('#d1').append($panelPrimary);
                        $('#panel-primary' + index).append([
                            $panelHeading
                                .append($panelTitle)
                                .text(item.Title),
                            $panelBody
                                .text(item.Content)
                                .append('<br /><br />')
                                .append('<span class=text-info>Tag: ' + item.FormalCategories[0].Name + '</span>')
                                .append('<br />')
                                .append('<span class=text-info>Type: ' + item.FormalCategories[0].Type.Name + '</span>')
                                .append('<hr>')
                                .append(item.AuthorId.FirstName + ' ' + item.AuthorId.LastName)
                                .append('<br />')
                                .append(item.PostTime)
                        ]);
                    });
                }
            });
        }

    </script>
}
