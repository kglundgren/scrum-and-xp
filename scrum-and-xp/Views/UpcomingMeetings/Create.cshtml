@model scrum_and_xp.ViewModels.CreateUpcomingMeetingViewModel

@{
    ViewBag.Title = "CreateUpcomingMeeting";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "UpcomingMeetings"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Upcoming Meeting Invite</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Option1, new { htmlAttributes = new { @class = "form-control", placeholder = "yyyy-mm-dd hh:mm" } })
                @Html.ValidationMessageFor(model => model.Option1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Option2, new { htmlAttributes = new { @class = "form-control", placeholder = "yyyy-mm-dd hh:mm" } })
                @Html.ValidationMessageFor(model => model.Option2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Option3, new { htmlAttributes = new { @class = "form-control", placeholder = "yyyy-mm-dd hh:mm" } })
                @Html.ValidationMessageFor(model => model.Option3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", placeholder = "hh:mm" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@foreach (var item in Model.AllUsers)
            {
                <a id="@item.Id" class="invite-btn btn-primary btn-sm">@item.FirstName @item.LastName - Invite</a>
            }*@

        @Html.ListBox("AllUsers", new SelectList(Model.AllUsers, "Id", "Email"), new { multiple = "multiple" })
        <input id="ShiftRight" type="button" value=">>>" />
        <input id="ShiftLeft" type="button" value="<<<" />
        @Html.ListBox("InvitedUsers", null, new { multiple = "multiple" })

        <br /><br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "MeetingInvites")
</div>

@section Scripts {
    <script>
        function test() {
            window.location.href = "https://www.google.se";
        }
        var invitedUsers = [];
        $('a.invite-btn').click(function () {
            var id = $(this).attr('id');
            invitedUsers.push(id);
        });

        $(function () {
            $("#ShiftRight,#ShiftLeft").click(function (event) {
                var ID = $(event.target).attr("ID");
                var ChooseFrom = ID == "ShiftRight" ? "#AllUsers" : "#InvitedUsers";
                var moveTo = ID == "ShiftRight" ? "#InvitedUsers" : "#AllUsers";
                var SelectData = $(ChooseFrom + " :selected").toArray();
                $(moveTo).append(SelectData);
                SelectData.remove;
            });
        });


    </script>
}
